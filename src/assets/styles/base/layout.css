/* Donâ€™t Overthink It (Flexbox) Grids
   https://css-tricks.com/dont-overthink-flexbox-grids/ */

/* .stack-layout piles up its .stack-cell children without wrapping;
   .grid-layout lines up its .grid-cell children without wrapping
   (fitting them on same row); .grid-layout-{halves,thrids} line up
   their children while wrapping at end of row, while fitting them
   in half- or a third of the available space. */

.stack-layout,
.grid-layout,
.grid-layout-halves,
.grid-layout-thirds {
    display: flex;
}

.stack-layout {
  flex-flow: column nowrap;
}

.grid-layout-halves,
.grid-layout-thirds {
  flex-flow: row wrap;
  justify-content: flex-start;
}

.stack-cell,
.grid-cell {
  flex: 1;
}

.grid-layout-halves .grid-cell {
  min-width: 48%;
  max-width: 48%;
}

.grid-layout-thirds .grid-cell {
  min-width: 32%;
  max-width: 32%;
}

.with-gutters {
  margin: calc(-1.0 * var(--line-height-base)) 0 0 calc(-1.0 * var(--line-height-base));
}

.with-gutters > .grid-cell,
.with-gutters > .stack-cell {
  padding: var(--line-height-base) 0 0 var(--line-height-base);
}

/* @media (max-width: env(--breakpoint-width-md)) */
@media (max-width: 768px) {
  .grid-layout,
  .grid-layout-halves,
  .grid-layout-thirds {
    display: block;
  }
  .grid-layout-halves .grid-cell,
  .grid-layout-thirds .grid-cell {
    min-width: 96%;
  }
}